apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "ContainerJFR",
          "metadata": {
            "name": "containerjfr"
          },
          "spec": {
            "minimal": false,
            "trustedCertSecrets": []
          }
        },
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "FlightRecorder",
          "metadata": {
            "name": "example-flightrecorder"
          },
          "spec": {
            "recordingSelector": {
              "matchLabels": {
                "rhjmc.redhat.com/flightrecorder": "example-flightrecorder"
              }
            }
          }
        },
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "Recording",
          "metadata": {
            "name": "example-recording"
          },
          "spec": {
            "archive": true,
            "duration": "30s",
            "eventOptions": [
              "template=ALL"
            ],
            "flightRecorder": {
              "name": "example-flightrecorder"
            },
            "name": "example-recording"
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring, Developer Tools
    certified: "false"
    containerImage: quay.io/rh-jmc-team/container-jfr-operator:1.0.0-beta5
    createdAt: "2020-07-03 00:00:00"
    description: JVM monitoring and profiling tool
    operators.operatorframework.io/builder: operator-sdk-v1.5.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: github.com/rh-jmc-team/container-jfr-operator
    support: Red Hat
  name: container-jfr-operator.v0.0.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ContainerJFR is the Schema for the containerjfrs API
      displayName: Container JFR
      kind: ContainerJFR
      name: containerjfrs.rhjmc.redhat.com
      resources:
      - kind: ConsoleLink
        name: ""
        version: v1
      - kind: Deployment
        name: ""
        version: v1
      - kind: Ingress
        name: ""
        version: v1
      - kind: PersistentVolumeClaim
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Deploy a pared-down ContainerJFR instance with no Grafana dashboard or jfr-datasource and no web-client UI.
        displayName: Minimal Deployment
        path: minimal
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Options to customize the storage for Flight Recordings and Templates
        displayName: Storage Options
        path: storageOptions
      - description: Configuration for the Persistent Volume Claim to be created by the operator.
        displayName: PVC
        path: storageOptions.pvc
      - description: Spec for a Persistent Volume Claim, whose options will override the defaults used by the operator. Unless overriden, the PVC will be created with the default Storage Class and 500MiB of storage. Once the operator has created the PVC, changes to this field have no effect.
        displayName: Spec
        path: storageOptions.pvc.spec
      - description: List of TLS certificates to trust when connecting to targets
        displayName: Trusted TLS Certificates
        path: trustedCertSecrets
      - description: Name of secret in the local namespace
        displayName: Secret Name
        path: trustedCertSecrets[0].secretName
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      statusDescriptors:
      - displayName: Application URL
        path: applicationUrl
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      version: v1beta1
    - description: FlightRecorder is the Schema for the flightrecorders API
      displayName: Flight Recorder
      kind: FlightRecorder
      name: flightrecorders.rhjmc.redhat.com
      resources:
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: If JMX authentication is enabled for this FlightRecorder's JVM, specify the credentials in a secret and reference it here
        displayName: JMXCredentials
        path: jmxCredentials
      - description: Recordings that match this selector belong to this FlightRecorder
        displayName: Recording Selector
        path: recordingSelector
      statusDescriptors:
      - description: Listing of events available in the target JVM
        displayName: Events
        path: events
      - description: JMX port for target JVM
        displayName: Port
        path: port
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Reference to the pod/service that this object controls JFR for
        displayName: Target
        path: target
      - description: Listing of templates available in the target JVM
        displayName: Templates
        path: templates
      version: v1beta1
    - description: Recording is the Schema for the recordings API
      displayName: Recording
      kind: Recording
      name: recordings.rhjmc.redhat.com
      resources:
      - kind: Pod
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      specDescriptors:
      - description: Whether this recording should be saved to persistent storage. If true, the JFR file will be retained until this object is deleted. If false, the JFR file will be deleted when its corresponding JVM exits.
        displayName: Archive
        path: archive
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:checkbox
      - description: The requested total duration of the recording, a zero value will record indefinitely.
        displayName: Duration
        path: duration
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: 'A list of event options to use when creating the recording. These are used to enable and fine-tune individual events. Examples: "jdk.ExecutionSample:enabled=true", "jdk.ExecutionSample:period=200ms"'
        displayName: Event Options
        path: eventOptions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Reference to the FlightRecorder object that corresponds to this Recording
        displayName: Flight Recorder
        path: flightRecorder
      - description: Name of the recording to be created.
        displayName: Name
        path: name
      - displayName: State
        path: state
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:RUNNING
        - urn:alm:descriptor:com.tectonic.ui:select:STOPPED
      statusDescriptors:
      - description: A URL to download the JFR file for the recording.
        displayName: Download URL
        path: downloadURL
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      - description: The duration of the recording specified during creation.
        displayName: Duration
        path: duration
        x-descriptors:
        - urn:alm:descriptor:text
      - description: A URL to download the autogenerated HTML report for the recording
        displayName: Report URL
        path: reportURL
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      - description: The date/time when the recording started.
        displayName: Start Time
        path: startTime
        x-descriptors:
        - urn:alm:descriptor:text
      - description: Current state of the recording.
        displayName: State
        path: state
        x-descriptors:
        - urn:alm:descriptor:text
      version: v1beta1
  description: |
    ContainerJFR provides a cloud-based solution for interacting with the JDK Flight Recorder already present in OpenJDK 11+ JVMs. With ContainerJFR, users can remotely start, stop, retrieve, and even analyze JFR event data, providing the capbility to easily take advantage of Flight Recorder''s extremely low runtime cost and overhead and the flexibility to monitor applications and analyze recording data without transferring data outside of the cluster the application runs within.
  displayName: ContainerJFR
  icon:
  - base64data: ""
    mediatype: image/png
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - flightrecorder
  - java
  - jdk
  - jfr
  - jmc
  - missioncontrol
  - monitoring
  - profiling
  links:
  - name: Upstream Project
    url: https://github.com/rh-jmc-team/container-jfr
  maintainers:
  - email: aazores@redhat.com
    name: Andrew Azores
  - email: ebaron@redhat.com
    name: Elliott Baron
  maturity: alpha
  provider:
    name: Red Hat, Inc.
  version: 1.0.0-beta5
