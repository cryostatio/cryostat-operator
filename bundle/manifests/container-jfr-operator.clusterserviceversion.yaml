apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "ContainerJFR",
          "metadata": {
            "name": "containerjfr-sample"
          },
          "spec": {
            "minimal": false,
            "storageOptions": {
              "pvc": {
                "annotations": {},
                "labels": {},
                "spec": {}
              }
            },
            "trustedCertSecrets": []
          }
        },
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "FlightRecorder",
          "metadata": {
            "name": "example-flightrecorder"
          },
          "spec": {
            "recordingSelector": {
              "matchLabels": {
                "rhjmc.redhat.com/flightrecorder": "example-flightrecorder"
              }
            }
          }
        },
        {
          "apiVersion": "rhjmc.redhat.com/v1beta1",
          "kind": "Recording",
          "metadata": {
            "name": "example-recording"
          },
          "spec": {
            "archive": "true,",
            "duration": "30s,",
            "eventOptions": [
              "template=ALL"
            ],
            "flightRecorder": {
              "name": "example-flightrecorder"
            },
            "name": "example-recording"
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring, Developer Tools
    certified: "false"
    containerImage: quay.io/rh-jmc-team/container-jfr-operator:1.0.0-beta5
    createdAt: "2020-07-03 00:00:00"
    description: JVM monitoring and profiling tool
    operators.operatorframework.io/builder: operator-sdk-v1.3.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: github.com/rh-jmc-team/container-jfr-operator
    support: Red Hat
  name: container-jfr-operator.v1.0.0-beta5
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: ContainerJFR is the Schema for the containerjfrs API
      displayName: Container JFR
      kind: ContainerJFR
      name: containerjfrs.rhjmc.redhat.com
      version: v1beta1
    - description: FlightRecorder is the Schema for the flightrecorders API
      displayName: Flight Recorder
      kind: FlightRecorder
      name: flightrecorders.rhjmc.redhat.com
      version: v1beta1
    - description: Recording is the Schema for the recordings API
      displayName: Recording
      kind: Recording
      name: recordings.rhjmc.redhat.com
      version: v1beta1
  description: |
    ContainerJFR provides a cloud-based solution for interacting with the JDK Flight Recorder already present in OpenJDK 11+ JVMs. With ContainerJFR, users can remotely start, stop, retrieve, and even analyze JFR event data, providing the capbility to easily take advantage of Flight Recorder''s extremely low runtime cost and overhead and the flexibility to monitor applications and analyze recording data without transferring data outside of the cluster the application runs within.
  displayName: ContainerJFR
  icon:
  - base64data: ""
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - console.openshift.io
          resources:
          - consolelinks
          verbs:
          - get
          - create
          - list
          - update
          - delete
        serviceAccountName: container-jfr-operator-service-account
      deployments:
      - name: container-jfr-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: quay.io/rh-jmc-team/container-jfr-operator:1.0.0-beta5
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 100m
                    memory: 30Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsUser: 65532
              serviceAccountName: container-jfr-operator-service-account
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - pods
          - services
          - services/finalizers
          - routes
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - leases
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - container-jfr-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
        - apiGroups:
          - rhjmc.redhat.com
          resources:
          - '*'
          - flightrecorders
          - recordings
          - containerjfrs
          verbs:
          - '*'
        - apiGroups:
          - cert-manager.io
          resources:
          - issuers
          - certificates
          verbs:
          - create
          - get
          - list
          - update
          - watch
        serviceAccountName: container-jfr-operator-service-account
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - flightrecorder
  - java
  - jdk
  - jfr
  - jmc
  - missioncontrol
  - monitoring
  - profiling
  links:
  - name: Upstream Project
    url: https://github.com/rh-jmc-team/container-jfr
  maintainers:
  - email: aazores@redhat.com
    name: Andrew Azores
  - email: ebaron@redhat.com
    name: Elliott Baron
  maturity: alpha
  provider:
    name: Red Hat, Inc.
  version: 1.0.0-beta5
